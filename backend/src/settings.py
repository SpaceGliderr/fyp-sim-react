PIXEL_TO_CM_RATIO = 2;

WHEEL_RADIUS_IN_M = 0.021; # in m (diameter is 42 mm)

WHEEL_RADIUS_IN_PX = WHEEL_RADIUS_IN_M * PIXEL_TO_CM_RATIO;

WHEEL_BASE_LENGTH_IN_M = 0.0885;

WHEEL_BASE_LENGTH_IN_PX = WHEEL_BASE_LENGTH_IN_M * PIXEL_TO_CM_RATIO;

# TODO: Fix translational velocity, the velocity for the robot is not this high
MAX_TRANSLATIONAL_VELOCITY = 0.4; # in m/s

MAX_ANGULAR_VELOCITY = 2.2763;

# Settings for the PID controller.
PID_CONTROLLER = {
    'kP': 10.0,
    'kI': 2.0,
    'kD': 0.0,
}

UPDATES_PER_SECOND = 30

DIFFERENCE_IN_TIME = (1000 / UPDATES_PER_SECOND) / 1000

NEAR_DISTANCE_IN_CM = 4

NEAR_DISTANCE_IN_PX = NEAR_DISTANCE_IN_CM * PIXEL_TO_CM_RATIO

CLOSE_DISTANCE_IN_CM = 2

CLOSE_DISTANCE_IN_PX = CLOSE_DISTANCE_IN_CM * PIXEL_TO_CM_RATIO

# Sensor weights for [0, 45, 90, 135, 180, 225, 270, 315]
SENSOR_WEIGHTS = [1, 1.5, 0, 1.2, 1, 1.2, 0, 1.5]

INVERTED_WEIGHT_INDICES = [1, 5]
